import{_ as l,r as h,o,c as n,a as e,b as r,w as d,d as t,f as s}from"./app.8b6d0242.js";const i={},c=s('<h1 id="class-xrstate" tabindex="-1"><a class="header-anchor" href="#class-xrstate" aria-hidden="true">#</a> Class: XRState</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',3),u=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),b=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),p=s('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new XRState</strong>()</p><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="mask" tabindex="-1"><a class="header-anchor" href="#mask" aria-hidden="true">#</a> Mask</h3><p>\u2022 <strong>Mask</strong>: <code>XRStateFlag</code></p><hr><h3 id="global" tabindex="-1"><a class="header-anchor" href="#global" aria-hidden="true">#</a> Global</h3>',8),f=e("code",null,"Static",-1),g=e("strong",null,"Global",-1),x=e("code",null,"XRState",-1),m=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="disable" tabindex="-1"><a class="header-anchor" href="#disable" aria-hidden="true">#</a> Disable</h3><p>\u25B8 <strong>Disable</strong>(<code>state</code>): <code>void</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="disableall" tabindex="-1"><a class="header-anchor" href="#disableall" aria-hidden="true">#</a> DisableAll</h3><p>\u25B8 <strong>DisableAll</strong>(): <code>void</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="enable" tabindex="-1"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> Enable</h3><p>\u25B8 <strong>Enable</strong>(<code>state</code>): <code>void</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="enableall" tabindex="-1"><a class="header-anchor" href="#enableall" aria-hidden="true">#</a> EnableAll</h3><p>\u25B8 <strong>EnableAll</strong>(): <code>void</code></p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has" aria-hidden="true">#</a> Has</h3><p>\u25B8 <strong>Has</strong>(<code>state</code>): <code>boolean</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>XRStateFlag</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h3><p>\u25B8 <strong>Set</strong>(<code>state</code>): <code>void</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="toggle" tabindex="-1"><a class="header-anchor" href="#toggle" aria-hidden="true">#</a> Toggle</h3><p>\u25B8 <strong>Toggle</strong>(<code>state</code>): <code>void</code></p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p>',45);function _(y,R){const a=h("RouterLink");return o(),n("div",null,[e("p",null,[r(a,{to:"/api/"},{default:d(()=>[t("com.needle.engine - v2.39.0-pre")]),_:1}),t(" / XRState")]),c,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/XRState.html#constructor"},{default:d(()=>[t("constructor")]),_:1})])]),u,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/XRState.html#mask"},{default:d(()=>[t("Mask")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#global"},{default:d(()=>[t("Global")]),_:1})])]),b,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/XRState.html#disable"},{default:d(()=>[t("Disable")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#disableall"},{default:d(()=>[t("DisableAll")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#enable"},{default:d(()=>[t("Enable")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#enableall"},{default:d(()=>[t("EnableAll")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#has"},{default:d(()=>[t("Has")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#set"},{default:d(()=>[t("Set")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/XRState.html#toggle"},{default:d(()=>[t("Toggle")]),_:1})])]),p,e("p",null,[t("\u25AA "),f,t(),g,t(": "),r(a,{to:"/api/classes/XRState.html"},{default:d(()=>[x]),_:1})]),m])}const X=l(i,[["render",_],["__file","XRState.html.vue"]]);export{X as default};
